############################## 项目启动信息配置 开始  ##############################
server:
  servlet:
    context-path: /
  port: 8086
  tomcat:
    port-header: HEAD,DELETE,OPTIONS,TRACE,COPY,SEARCH,PROPFIND,BOGUS       #禁止这些请求头
    min-spare-threads: 20
    max-threads: 500
    max-connections: 10000

dominoFilePath: D:\Program Files\IBM\Domino\data\domino\html\diiop_ior.txt

############################## 项目启动信息配置 结束  ##############################
############################## spring配置 开始  ##############################
spring:
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: dev

  mvc:
    static-path-pattern: /static/**         # 静态资源路径
    view:
      prefix: /WEB-INF/view                 # 页面文件路径
  http:
    converters:
      preferred-json-mapper: fastjson       # Json转换器
  servlet:
    multipart:
      max-request-size: 100MB               # 最大请求大小
      max-file-size: 100MB                  # 最大文件大小
  devtools:
    restart:
      enabled: true                         # 是否开启开发者工具（true/false）
      additional-paths:
      exclude: static/**
  aop:
    proxy-target-class: true                #false为启用jdk默认动态代理,true为cglib动态代理
  activiti:
    check-process-definitions: false
############################## spring配置 结束  ##############################
############################## mybatis-plus配置开始  ##############################
mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml  classpath:/com/example/mapper/*Mapper.xml
  mapper-locations: classpath*:com/**/mapper/xml/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.example.notes.entity
  global-config:
    #刷新mapper 调试神器
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: 2
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: 2
      #驼峰下划线转换
      column-underline: false
      #数据库大写下划线转换
      #      capital-mode: true
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
    refresh: true
    configuration:
      #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
      map-underscore-to-camel-case: true
      cache-enabled: false
      #配置JdbcTypeForNull, oracle数据库必须配置
      jdbc-type-for-null: 'null'
      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
      #database-id: mysql
############################## mybatis-plus配置结束  ##############################
fileserver:
  serverPath: http://192.168.163.157:6001
eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://192.168.15.114:8761/eureka
feign:
  #  hystrix:
  #    enabled: true
  client:
    config:
      default:
        #连接超时时间
        connectTimeout: 5000
        #读取超时时间
        readTimeout: 5000
#hystrix:
#  propagate:
#    request-attribute:
#      enabled: true
#  command:
#    #全局默认配置
#    default:
#      #线程隔离相关
#      execution:
#        timeout:
#          #是否给方法执行设置超时时间，默认为true。一般我们不要改。
#          enabled: true
#        isolation:
#          #配置请求隔离的方式，这里是默认的线程池方式。还有一种信号量的方式SEMAPHORE，使用比较少。
#          strategy: THREAD
#          thread:
#            #方式执行的超时时间，默认为1000毫秒，在实际场景中需要根据情况设置
#            timeoutInMilliseconds: 10000
#            #发生超时时是否中断方法的执行，默认值为true。不要改。
#            interruptOnTimeout: true
#            #是否在方法执行被取消时中断方法，默认值为false。没有实际意义，默认就好！
#            interruptOnCancel: false
#  circuitBreaker:   #熔断器相关配置
#    enabled: true   #是否启动熔断器，默认为true，false表示不要引入Hystrix。
#    requestVolumeThreshold: 20     #启用熔断器功能窗口时间内的最小请求数，假设我们设置的窗口时间为10秒，
#    sleepWindowInMilliseconds: 5000    #所以此配置的作用是指定熔断器打开后多长时间内允许一次请求尝试执行，官方默认配置为5秒。
#    errorThresholdPercentage: 50   #窗口时间内超过50%的请求失败后就会打开熔断器将后续请求快速失败掉,默认配置为50
ribbon:
  eager-load:
    enabled: true
  #说明：同一台实例的最大自动重试次数，默认为1次，不包括首次
  MaxAutoRetries: 1
  #说明：要重试的下一个实例的最大数量，默认为1，不包括第一次被调用的实例
  MaxAutoRetriesNextServer: 1
  #说明：是否所有的操作都重试，默认为true
  OkToRetryOnAllOperations: true
  #说明：从注册中心刷新服务器列表信息的时间间隔，默认为2000毫秒，即2秒
  ServerListRefreshInterval: 2000
  #说明：使用Apache HttpClient连接超时时间，单位为毫秒
  ConnectTimeout: 3000
  #说明：使用Apache HttpClient读取的超时时间，单位为毫秒
  ReadTimeout: 3000